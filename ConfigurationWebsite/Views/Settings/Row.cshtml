@model Roblox.ConfigurationWebsite.Models.Configuration.SettingModel

<tr data-sid="@Model.Id">
    <td>@Model.Id</td>
    <td class="a" style="width: 110px">
        <div class="btn-group">
            <button type="button" class="settingsEditButton btn btn-primary btn-xs">Edit</button>
            <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="caret"></span>
                <span class="sr-only">Toggle Dropdown</span>
            </button>
            <ul class="dropdown-menu">
                <li>@Html.ActionLink("Edit", "", null, new { href = "#", @class = "settingsEditButton" })</li>
                <li>@Html.ActionLink("Delete", "", null, new { href = "#", @class = "settingsDeleteButton" })</li>
            </ul>
        </div>
    </td>
    <td><div class="gt">@Model.GroupName</div></td>
    <td><div class="n" title="@Model.Name">@Model.Name</div></td>
    <td><div class="t">@Model.Type</div></td>
    <td>
        <div class="valueCell">
            @* This is here because some genuis decided to use an entire endpoint to get this value, yet also require it to be provided here.*@
            <span class="setting-value" hidden>@Html.Encode(Model.Value)</span>
            <span class="value @(Model.IsMasked ? "secret" : "")" title="@Html.Encode(Model.Value)">
                @if (Model.IsMasked)
                {
                    @:[value not shown]
                }
                else
                {
                    @Html.Encode(Model.Value)
                }
            </span>
            @if (Model.IsMasked)
            {
                <div class="showSettingDiv">
                    <span class="showSettingButton btn btn-default btn-xs pull-right" data-groupname="@Model.GroupName" data-settingname="@Model.Name">Show</span>
                </div>
            }
            <div class="copyValue @(Model.IsMasked ? "masked" : "")">
                <a href="javascript:navigator.clipboard.writeText('@Html.Encode(Model.Value)')" title="@Html.Encode("Copy this:\n " + Model.Value)" class="copyIcon">
                    <span class="copyToClipboardIcon" />
                </a>
            </div>
        </div>
    </td>
    <td><div class="c">@Html.Encode(Model.Comment)</div></td>
    <td>@Html.DisplayFor(modelItem => Model.LastModified)</td>
    <td>@Html.DisplayFor(modelItem => Model.IsEnvironmentSpecific)</td>
</tr>